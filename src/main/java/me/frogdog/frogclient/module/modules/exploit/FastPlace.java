package me.frogdog.frogclient.module.modules.exploit;

import me.frogdog.frogclient.event.Listener;
import me.frogdog.frogclient.event.events.TickEvent;
import me.frogdog.frogclient.module.ModuleType;
import me.frogdog.frogclient.module.ToggleableModule;
import me.frogdog.frogclient.properties.NumberProperty;
import me.frogdog.frogclient.properties.Property;
import net.minecraft.block.Block;
import net.minecraft.init.Items;
import net.minecraft.item.Item;

public class FastPlace extends ToggleableModule {
	private final Property<Boolean> blocks = new Property<Boolean>(false, "Blocks", "b");
	private final Property<Boolean> xp = new Property<Boolean>(false, "Exp", "e");
	private final Property<Boolean> endCrystal = new Property<Boolean>(false, "EndCrystal", "ec");
	private final NumberProperty<Integer> blockDelay = new NumberProperty<Integer>(0, 0, 1, "BlockDelay");
	private final NumberProperty<Integer> xpDelay = new NumberProperty<Integer>(0, 0, 1, "ExpDelay");
	private final NumberProperty<Integer> endCrystalDelay = new NumberProperty<Integer>(0, 0, 1, "CrystalDelay");

	public FastPlace() {
		super("FastPlace", new String[] {"FastPlace", "fastplace"}, ModuleType.EXPLOITS);
		offerProperties(this.blocks, this.xp, this.endCrystal, this.blockDelay, this.xpDelay, this.endCrystalDelay, this.keybind);
        this.listeners.add(new Listener<TickEvent>("tick_listener"){

            @Override
            public void call(TickEvent event) {
                if(Block.getBlockFromItem(mc.player.getHeldItemMainhand().getItem()).getDefaultState().isFullBlock() && blocks.getValue() == true) {
                    mc.rightClickDelayTimer = FastPlace.this.blockDelay.getValue();
                }
                
                if(getHeldItem(Items.EXPERIENCE_BOTTLE) && xp.getValue() == true) {
                	mc.rightClickDelayTimer = FastPlace.this.xpDelay.getValue();
                }
                
                if(getHeldItem(Items.END_CRYSTAL) && endCrystal.getValue() == true) {
                	mc.rightClickDelayTimer = FastPlace.this.endCrystalDelay.getValue();
                }
            }
        });

	}
	
    public boolean getHeldItem(Item item) {
        return mc.player.getHeldItemMainhand().getItem().equals(item);
    }
	
}
